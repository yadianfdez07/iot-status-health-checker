{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "AWS CloudFormation template for disaster recovery for AWS IoT. Amazon IoT health check.",
    "Resources": {
        "CreateLambdaIoTHealthCheckerRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    "CreateLambdaR53CheckerPolicy",
                                    {
                                        "Ref": "AWS::Region"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "iot:AttachPolicy",
                                        "iot:AttachPrincipalPolicy",
                                        "iot:AttachThingPrincipal",
                                        "iot:CreateKeysAndCertificate",
                                        "iot:CreatePolicy",
                                        "iot:CreateThing",
                                        "iot:DescribeEndpoint",
                                        "iot:DescribeThing",
                                        "iot:DetachPolicy",
                                        "iot:DetachThingPrincipal",
                                        "iot:GetPolicy",
                                        "iot:ListAttachedPolicies",
                                        "iot:ListPolicyPrincipals",
                                        "iot:ListPrincipalPolicies",
                                        "iot:ListPrincipalThings",
                                        "iot:ListTargetsForPolicy",
                                        "iot:ListThingGroupsForThing",
                                        "iot:ListThingPrincipals"
                                    ],
                                    "Resource": "*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "s3:PutObject"
                                    ],
                                    "Resource": {
                                        "Fn::Sub": [
                                            "arn:aws:s3:::${Bucket}/*",
                                            {
                                                "Bucket": "S3BucketForLambda"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    }
                ],
                "Path": "/service-role/",
                "Tags": [
                    {
                        "Key": "Solution",
                        "Value": "IoTHealthChecker"
                    }
                ]
            },
            "Metadata": {
                "cfn_nag": {
                    "rules_to_suppress": [
                        {
                            "id": "W11",
                            "reason": "Not all API do support resource level based permissions"
                        }
                    ]
                }
            }
        },
        "LambdaIoTHealthStatusCheckerRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Policies": [
                    {
                        "PolicyName": {
                            "Fn::Join": [
                                "-",
                                [
                                    "LambdaStatusCheckerPolicy",
                                    {
                                        "Ref": "AWS::Region"
                                    }
                                ]
                            ]
                        },
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action":[
                                        "lambda:InvokeFuntion"
                                    ],
                                    "Resource":{
                                        "Fn::Sub":"arn:aws:lambda:*:${AWS::AccountId}:function:HealthStatusChecker"
                                    }
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                }
                            ]
                        }
                    }
                ],
                "Path": "/service-role/",
                "Tags": [
                    {
                        "Key": "Solution",
                        "Value": "IoTHealthChecker"
                    }
                ]
            },
            "Metadata": {
                "cfn_nag": {
                    "rules_to_suppress": [
                        {
                            "id": "W11",
                            "reason": "Not all API do support resource level based permissions"
                        }
                    ]
                }
            }
        },
        "CustomCreateR53CheckerLambda": {
            "Type": "Custom::CustomCreateR53CheckerLambda",
            "Properties": {
                "ServiceToken": {
                    "Fn::GetAtt": [
                        "CustomCreateIoTHealthCheckerLambdaFunction",
                        "Arn"
                    ]
                },
                "REGION": {
                    "Ref": "AWS::Region"
                },
                "ACCOUNT_ID": {
                    "Ref": "AWS::AccountId"
                },
                "THING_NAME": "HealthChecker"
            }
        },
        "CustomCreateIoTHealthCheckerLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "cfn_nag": {
                    "rules_to_suppress": [
                        {
                            "id": "W89",
                            "reason": "Lambda function needs access to public endpoints."
                        },
                        {
                            "id": "W92",
                            "reason": "Setting reserved concurrency might make the stack creation to fail or might jeopardize customer settings"
                        }
                    ]
                }
            },
            "Properties": {
                "FunctionName": "HealthCheckerBuilder",
                "Handler": "HealthCheckerBuilder::HealthCheckerBuilder.Function::FunctionHandler",
                "Role": {
                    "Fn::GetAtt": [
                        "CreateLambdaIoTHealthCheckerRole",
                        "Arn"
                    ]
                },
                "Code": "./dotnetPackaged/HealthCheckerBuilder.zip",
                "Runtime": "dotnetcore3.1",
                "MemorySize": 256,
                "Timeout": 30,
                "TracingConfig": {
                    "Mode": "Active"
                },
                "Tags": [
                    {
                        "Key": "CloudFormation",
                        "Value": "CustomResource "
                    },
                    {
                        "Key": "Solution",
                        "Value": "IoTHealthCheckBuilder "
                    }
                ]
            }
        },
        "HealthStatusCheckerRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
                "ApiKeySourceType": "HEADER",
                "Description": "A HealthStatusChecker API",
                "Name": "HealthStatusCheckerAPI"
            }
        },
        "HealthStatusCheckerResource": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
                "RestApiId": {
                    "Ref": "HealthStatusCheckerRestApi"
                },
                "ParentId": {
                    "Fn::GetAtt": [
                        "HealthStatusCheckerRestApi",
                        "RootResourceId"
                    ]
                },
                "PathPart": "HealthStatusChecker"
            }
        },
        "HealthStatusCheckerApiKey": {
            "Type": "AWS::ApiGateway::ApiKey",
            "DependsOn": [
                "HealthStatusCheckerDeployment"
            ],
            "Properties": {
                "Name": "OligoTestApiKey",
                "Description": "CloudFormation API Key",
                "Enabled": "true",
                "StageKeys": [
                    {
                        "RestApiId": {
                            "Ref": "HealthStatusCheckerRestApi"
                        },
                        "StageName": "OligoTest"
                    }
                ]
            }
        },
        "HealthStatusCheckerUsagePlanKey": {
            "Type": "AWS::ApiGateway::UsagePlanKey",
            "DependsOn": [
                "HealthStatusCheckerUsagePlan"
            ],
            "Properties": {
                "KeyId": {
                    "Ref": "HealthStatusCheckerApiKey"
                },
                "KeyType": "API_KEY",
                "UsagePlanId": {
                    "Ref": "HealthStatusCheckerUsagePlan"
                }
            }
        },
        "HealthStatusCheckerUsagePlan": {
            "Type": "AWS::ApiGateway::UsagePlan",
            "DependsOn": [
                "HealthStatusCheckerDeployment"
            ],
            "Properties": {
                "ApiStages": [
                    {
                        "ApiId": {
                            "Ref": "HealthStatusCheckerRestApi"
                        },
                        "Stage": "OligoTest"
                    }
                ],
                "Description": "HealthStatusChecker usage plan",
                "UsagePlanName": "HealthStatusCheckerUsagePlan"
            }
        },
        "HealthStatusCheckerDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": [
                "HealthStatusCheckerMethod"
            ],
            "Properties": {
                "RestApiId": {
                    "Ref": "HealthStatusCheckerRestApi"
                },
                "Description": "HealthStatusChecker deployment",
                "StageName": "OligoTest"
            }
        },
        "HealthStatusCheckerMethod": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
                "AuthorizationType": "NONE",
                "ApiKeyRequired": true,
                "HttpMethod": "POST",
                "Integration": {
                    "Type": "AWS",
                    "PassthroughBehavior": "WHEN_NO_MATCH",
                    "IntegrationHttpMethod": "POST",
                    "IntegrationResponses": [
                        {
                            "ResponseTemplates": {
                                "application/json": ""
                            },
                            "ResponseParameters": {},
                            "SelectionPattern": "",
                            "StatusCode": 200
                        }
                    ],
                    "Uri": {
                        "Fn::Sub": "arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${HealthStatusCheckerLambda.Arn}/invocations"
                    }
                },
                "MethodResponses": [
                    {
                        "ResponseModels": {
                            "application/json": "Empty"
                        },
                        "StatusCode": 200
                    }
                ],
                "RestApiId": {
                    "Ref": "HealthStatusCheckerRestApi"
                },
                "ResourceId": {
                    "Ref": "HealthStatusCheckerResource"
                }
            }
        },
        "HealthStatusCheckerPermission": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "Principal": "apigateway.amazonaws.com",
                "FunctionName": {
                    "Fn::GetAtt": [
                        "HealthStatusCheckerLambda",
                        "Arn"
                    ]
                },
                "SourceArn": {
                    "Fn::Join": [
                        "",
                        [
                            "arn:aws:execute-api:",
                            {
                                "Ref": "AWS::Region"
                            },
                            ":",
                            {
                                "Ref": "AWS::AccountId"
                            },
                            ":",
                            {
                                "Ref": "HealthStatusCheckerRestApi"
                            },
                            "/*"
                        ]
                    ]
                }
            }
        },
        "HealthStatusCheckerLambda": {
            "Type": "AWS::Lambda::Function",
            "Metadata": {
                "cfn_nag": {
                    "rules_to_suppress": [
                        {
                            "id": "W89",
                            "reason": "Lambda function needs access to public endpoints."
                        },
                        {
                            "id": "W92",
                            "reason": "Setting reserved concurrency might make the stack creation to fail or might jeopardize customer settings"
                        }
                    ]
                }
            },
            "Properties": {
                "FunctionName": "HealthStatusChecker",
                "Handler": "HealthStatusChecker::HealthStatusChecker.Function::FunctionHandler",
                "Role": {
                    "Fn::GetAtt": [
                        "LambdaIoTHealthStatusCheckerRole",
                        "Arn"
                    ]
                },
                "Code": "./dotnetPackaged/HealthStatusChecker.zip",
                "Runtime": "dotnetcore3.1",
                "MemorySize": 256,
                "Timeout": 30,
                "TracingConfig": {
                    "Mode": "Active"
                },
                "Tags": [
                    {
                        "Key": "CloudFormation",
                        "Value": "CustomResource "
                    },
                    {
                        "Key": "Solution",
                        "Value": "IoTHealthStatusChecker "
                    }
                ]
            }
        }
    },
    "Outputs": {
        "CertificateArnOutput": {
            "Value": {
                "Fn::GetAtt": [
                    "CustomCreateR53CheckerLambda",
                    "CertificateArn"
                ]
            }
        },
        "CertificatePemOutput": {
            "Value": {
                "Fn::GetAtt": [
                    "CustomCreateR53CheckerLambda",
                    "CertificatePem"
                ]
            }
        },
        "CertificatePrivateKeyOutput": {
            "Value": {
                "Fn::GetAtt": [
                    "CustomCreateR53CheckerLambda",
                    "CertificatePrivateKey"
                ]
            }
        },
        "CertificatePublicKeyOutput": {
            "Value": {
                "Fn::GetAtt": [
                    "CustomCreateR53CheckerLambda",
                    "CertificatePublicKey"
                ]
            }
        }
    }
}